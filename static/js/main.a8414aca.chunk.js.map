{"version":3,"sources":["img/added.webp","img/added.png","context/TodoS.js","hooks/useTasks.js","components/AddedTodo.js","components/Container.js","components/ShowTodosItems.js","components/ShowTodos.js","App.js","index.js"],"names":["TodoSContext","createContext","TodoSProvider","children","useState","JSON","parse","window","localStorage","getItem","todoS","setTodoS","Provider","value","useTasks","useContext","addTask","task","id","length","newTodoS","todo","isCompleted","setItem","stringify","markCompletedTodo","dataTodo","newStateTodoS","map","deleteTodo","filter","AddedTodo","setTask","className","htmlFor","style","fontSize","type","placeholder","onChange","evt","target","onClick","srcSet","require","default","src","Container","ShowTodosItems","setSearcher","colorConfirm","setColorConfirm","color","xmlns","width","height","fill","viewBox","d","textAlign","overflowWrap","margin","maxWidth","ShowTodos","filterTodoS","setFilterTodoS","searcher","totalCompletedTodoS","setTotalCompletedTodoS","useEffect","slice","marginBottom","maxHeight","overflow","marginTop","data","App","render","document","getElementById"],"mappings":"oJAAA,OAAe,cAA0B,oC,6BCAzC,OAAe,cAA0B,mC,wICGnCA,EAAeC,wBAAc,IAEtBC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,EAA0BC,mBAASC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAAa,IAAvF,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,cAACX,EAAaY,SAAd,CAAuBC,MAAQ,CAAEH,QAAOC,YAAxC,SACIR,KASOH,ICqBAc,EApCE,WACf,MAA0BC,qBAAWf,GAA9BU,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SA8Bd,MAAO,CACLK,QA7Bc,SAACC,GACf,IAAMC,EAAKR,EAAMS,OAAS,EAAIT,EAAMA,EAAMS,OAAS,GAAGD,GAAK,EAAI,EACzDE,EAAQ,sBACTV,GADS,CAEZ,CAACQ,KAAIG,KAAMJ,EAAMK,aAAa,KAGhCX,EAASS,GACTb,OAAOC,aAAae,QAAQ,QAASlB,KAAKmB,UAAUJ,KAqB3CK,kBAnBe,SAACC,GACzB,IAAIC,EAAgBjB,EAAMkB,KAAI,SAAAP,GAC5B,OAAIA,EAAKH,KAAOQ,EAASR,GAChB,2BACFG,GADL,IACWC,aAAcI,EAASJ,cAEtBD,KAEhBV,EAASgB,GAETpB,OAAOC,aAAae,QAAQ,QAASlB,KAAKmB,UAAUG,KASxBE,WAPX,SAACH,GAClB,IAAIC,EAAgBjB,EAAMoB,QAAO,SAAAT,GAAI,OAAIK,EAASR,KAAOG,EAAKH,MAE9DP,EAASgB,GACTpB,OAAOC,aAAae,QAAQ,QAASlB,KAAKmB,UAAUG,OCOzCI,G,MAlCG,WAChB,MAAwB3B,mBAAS,IAAjC,mBAAOa,EAAP,KAAae,EAAb,KACOhB,EAAWF,IAAXE,QAOP,OACE,sBAAKiB,UAAU,uBAAf,UACE,iDACA,uBAAOC,QAAQ,YAAYC,MAAQ,CAACC,SAAU,UAA9C,uBACA,uBACEC,KAAK,OAAOnB,GAAG,YACfoB,YAAY,iBACZzB,MAAQI,EAAOsB,SAAW,SAACC,GAAD,OAASR,EAAQQ,EAAIC,OAAO5B,UAExD,wBAAQwB,KAAK,SACXJ,UAAU,kBACVS,QAhBmB,WACvB1B,EAAQC,GACRe,EAAQ,KAYN,yBAMA,oCACE,wBAAQW,OAASC,EAAQ,IAAqBC,UAC9C,qBAAKC,IAAMF,EAAQ,IAAoBC,QACrCZ,UAAU,sBCfLc,G,MAdG,SAAC,GAAgB,IAAf5C,EAAc,EAAdA,SAClB,OACE,qBAAK8B,UAAU,YAAf,SACE,qBAAKA,UAAU,aAAf,SACI9B,QC+CK6C,G,MAjDQ,SAAC,GAA6B,IAA5BtB,EAA2B,EAA3BA,SAAUuB,EAAiB,EAAjBA,YAEjC,EAAwC7C,mBAASsB,EAASJ,aAA1D,mBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAAwCrC,IAAjCW,EAAP,EAAOA,kBAAmBI,EAA1B,EAA0BA,WAW1B,OACE,sBAAKI,UAAU,aAAf,UACE,wBAAQI,KAAK,SAASF,MAAQ,CAACiB,MAAOF,EAAe,QAAU,SAC7DjB,UAAU,cAAcS,QAZJ,WACxBS,GAAiBD,GACjBzB,EAAkBC,GAClBuB,EAAY,KAQV,SAGE,qBAAKI,MAAM,6BAA6BC,MAAM,OAC5CC,OAAO,OAAOC,KAAK,eACnBvB,UAAU,0BAA0BwB,QAAQ,YAF9C,SAGE,sBAAMC,EAAE,gMAGZ,qBAAKvB,MAAQ,CAACwB,UAAW,SAAUC,aAAc,aAAcC,OAAQ,SAAUC,SAAU,OAA3F,SACIZ,EACE,8BAAOxB,EAASL,OAChB,+BAAQK,EAASL,SAGvB,wBAAQgB,KAAK,SAASF,MAAQ,CAACiB,MAAO,OACpCnB,UAAU,cAAcS,QAtBL,WACvBb,EAAWH,IAoBT,SAGE,qBAAK2B,MAAM,6BAA6BC,MAAM,OAC5CC,OAAO,OAAOC,KAAK,eACnBvB,UAAU,sBAAsBwB,QAAQ,YAF1C,SAGE,sBAAMC,EAAE,iOCMHK,EA1CG,WAChB,MAAsC3D,mBAAS,IAA/C,mBAAO4D,EAAP,KAAoBC,EAApB,KACA,EAAgC7D,mBAAS,IAAzC,mBAAO8D,EAAP,KAAiBjB,EAAjB,KACA,EAAsD7C,mBAAS,GAA/D,mBAAO+D,EAAP,KAA4BC,EAA5B,KACO1D,EAASK,qBAAWf,GAApBU,MAaP,OAXA2D,qBAAU,WAENJ,EADEC,EACaxD,EAAMoB,QAAO,SAAAT,GAAI,OAAIA,EAAKA,KAAKiD,MAAM,EAAGJ,EAAS/C,UAAY+C,KAE7DxD,KAChB,CAACwD,IACJG,qBAAU,WACRJ,EAAevD,GACf0D,EAAuB1D,EAAMoB,QAAO,SAAAT,GAAI,OAAIA,EAAKC,eAAaH,UAC7D,CAACT,IAGF,sBAAKuB,UAAU,uBAAf,UACE,oBAAIE,MAAQ,CAACC,SAAU,OAAQmC,aAAc,QAA7C,wBACA,uBAAMpC,MAAQ,CAACoC,aAAc,QAA7B,uBACcJ,EADd,OACyCzD,EAAMS,UAE/C,uBACEkB,KAAK,SAASC,YAAY,YAC1BL,UAAU,eACVpB,MAAQqD,EAAW3B,SAAW,SAACC,GAAD,OAASS,EAAYT,EAAIC,OAAO5B,UAEhE,qBAAKsB,MAAQ,CAACqC,UAAW,OAAQC,SAAU,OAAQC,UAAW,OAAQpB,MAAO,OAA7E,SACIU,EAAY7C,OAAS,EACnB6C,EAAYpC,KAAK,SAAA+C,GAAI,OACrB,cAAC,EAAD,CACEjD,SAAWiD,EAAO1B,YAAcA,GADZ0B,EAAKzD,OAI3B,qDCtBG0D,G,MAbH,WACV,OACE,cAAC,EAAD,UACE,+BACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,aCRVC,iBACE,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a8414aca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/added.3f2205ab.webp\";","export default __webpack_public_path__ + \"static/media/added.7a0a69d2.png\";","import { useState, createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoSContext = createContext({});\r\n\r\nexport const TodoSProvider = ({ children }) => {\r\n  const [todoS, setTodoS] = useState(JSON.parse(window.localStorage.getItem('todoS')) || []);\r\n  return (\r\n    <TodoSContext.Provider value={ { todoS, setTodoS } }>\r\n      { children }\r\n    </TodoSContext.Provider>\r\n  );\r\n};\r\n\r\nTodoSProvider.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default TodoSContext;\r\n","import { useContext } from 'react';\r\nimport TodoSContext from '../context/TodoS';\r\n\r\nconst useTasks = () => {\r\n  const {todoS, setTodoS} = useContext(TodoSContext);\r\n\r\n  const addTask = (task) => {\r\n    const id = todoS.length > 0 ? todoS[todoS.length - 1].id + 1 : 0;\r\n    const newTodoS = [\r\n      ...todoS,\r\n      {id, todo: task, isCompleted: false}\r\n    ];\r\n\r\n    setTodoS(newTodoS);\r\n    window.localStorage.setItem('todoS', JSON.stringify(newTodoS));\r\n  };\r\n  const markCompletedTodo = (dataTodo) => {\r\n    let newStateTodoS = todoS.map(todo => {\r\n      if (todo.id === dataTodo.id) {\r\n        return {\r\n          ...todo, isCompleted: !dataTodo.isCompleted\r\n        };\r\n      } else return todo;\r\n    });\r\n    setTodoS(newStateTodoS);\r\n\r\n    window.localStorage.setItem('todoS', JSON.stringify(newStateTodoS));\r\n  };\r\n  const deleteTodo = (dataTodo) => {\r\n    let newStateTodoS = todoS.filter(todo => dataTodo.id !== todo.id);\r\n\r\n    setTodoS(newStateTodoS);\r\n    window.localStorage.setItem('todoS', JSON.stringify(newStateTodoS));\r\n  };\r\n  return {\r\n    addTask, markCompletedTodo, deleteTodo\r\n  };\r\n};\r\n\r\nexport default useTasks;","import { useState } from 'react';\r\nimport useTasks from '../hooks/useTasks';\r\n\r\nimport '../styles/addedTodo.css';\r\n\r\nconst AddedTodo = () => {\r\n  const [task, setTask] = useState('');\r\n  const {addTask} = useTasks();\r\n\r\n  const handleCreateTask = () => {\r\n    addTask(task);\r\n    setTask('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-added-todo\">\r\n      <h1>Create New Task</h1>\r\n      <label htmlFor=\"task-name\" style={ {fontSize: '1.5rem'} }>Task Name</label>\r\n      <input\r\n        type=\"text\" id=\"task-name\"\r\n        placeholder=\"write the task\"\r\n        value={ task } onChange={ (evt) => setTask(evt.target.value) }\r\n      />\r\n      <button type=\"button\"\r\n        className=\"button-add-task\"\r\n        onClick={ handleCreateTask }\r\n      >\r\n        Create Task\r\n      </button>\r\n      <picture>\r\n        <source srcSet={ require('../img/added.webp').default } />\r\n        <img src={ require('../img/added.png').default }\r\n          className=\"img-added\"\r\n        />\r\n      </picture>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddedTodo;","import PropTypes from 'prop-types';\r\nimport '../styles/container.css';\r\n\r\nconst Container = ({children}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"boxes-show\">\r\n        { children }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nimport useTasks from '../hooks/useTasks';\r\n\r\nconst ShowTodosItems = ({dataTodo, setSearcher}) => {\r\n\r\n  const [colorConfirm, setColorConfirm] = useState(dataTodo.isCompleted);\r\n  const {markCompletedTodo, deleteTodo} = useTasks();\r\n\r\n  const handleConfirmTask = () => {\r\n    setColorConfirm(!colorConfirm);\r\n    markCompletedTodo(dataTodo);\r\n    setSearcher('');\r\n  };\r\n  const handleDeleteTodo = () => {\r\n    deleteTodo(dataTodo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-items\">\r\n      <button type=\"button\" style={ {color: colorConfirm ? 'green' : 'black'} }\r\n        className=\"button-item\" onClick={ handleConfirmTask }\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16px\"\r\n          height=\"16px\" fill=\"currentColor\"\r\n          className=\"bi bi-check-circle-fill\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n        </svg>\r\n      </button>\r\n      <div style={ {textAlign: 'center', overflowWrap: 'break-word', margin: '0 10px', maxWidth: '80%'} }>\r\n        { colorConfirm\r\n          ? <del>{ dataTodo.todo }</del>\r\n          : <span>{ dataTodo.todo }</span>\r\n        }\r\n      </div>\r\n      <button type=\"button\" style={ {color: 'red'} }\r\n        className=\"button-item\" onClick={ handleDeleteTodo }\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16px\"\r\n          height=\"16px\" fill=\"currentColor\"\r\n          className=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nShowTodosItems.propTypes = {\r\n  dataTodo: PropTypes.object.isRequired,\r\n  setSearcher: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ShowTodosItems;","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport '../styles/showTodos.css';\r\nimport ShowTodosItems from './ShowTodosItems';\r\nimport TodoSContext from '../context/TodoS';\r\n\r\nconst ShowTodos = () => {\r\n  const [filterTodoS, setFilterTodoS] = useState([]);\r\n  const [searcher, setSearcher] = useState('');\r\n  const [totalCompletedTodoS, setTotalCompletedTodoS] = useState(0);\r\n  const {todoS} = useContext(TodoSContext);\r\n\r\n  useEffect(() => {\r\n    if (searcher)\r\n      setFilterTodoS(todoS.filter(todo => todo.todo.slice(0, searcher.length) === searcher));\r\n    else\r\n      setFilterTodoS(todoS);\r\n  }, [searcher]);\r\n  useEffect(() => {\r\n    setFilterTodoS(todoS);\r\n    setTotalCompletedTodoS(todoS.filter(todo => todo.isCompleted).length);\r\n  }, [todoS]);\r\n\r\n  return (\r\n    <div className=\"container-show-todos\">\r\n      <h2 style={ {fontSize: '2rem', marginBottom: '1rem'} }>Your Tasks</h2>\r\n      <span style={ {marginBottom: '1rem'} }>\r\n        Completed { totalCompletedTodoS } to { todoS.length }\r\n      </span>\r\n      <input\r\n        type=\"search\" placeholder=\"Search...\"\r\n        className=\"input-search\"\r\n        value={ searcher } onChange={ (evt) => setSearcher(evt.target.value) }\r\n      />\r\n      <div style={ {maxHeight: '40vh', overflow: 'auto', marginTop: '1rem', width: '90%'} }>\r\n        { filterTodoS.length > 0\r\n          ? filterTodoS.map( data =>\r\n            <ShowTodosItems key={ data.id }\r\n              dataTodo={ data } setSearcher={ setSearcher }\r\n            />\r\n          )\r\n          : <p>Add a new Task</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowTodos;","import AddedTodo from './components/AddedTodo';\r\nimport Container from './components/Container';\r\nimport ShowTodos from './components/ShowTodos';\r\nimport { TodoSProvider } from './context/TodoS';\r\nimport './styles/index.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <TodoSProvider>\r\n      <main>\r\n        <Container>\r\n          <AddedTodo />\r\n          <ShowTodos />\r\n        </Container>\r\n      </main>\r\n    </TodoSProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import {render} from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nrender(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}